spring:
  application:
    name: order-management-microservice
  config:
    import: configserver:http://localhost:8888
  data:
      mongodb:
        uri: mongodb+srv://kevinevelasco:kevinevelasco@msc-cluster.gh4kp.mongodb.net/?retryWrites=true&w=majority&appName=msc-cluster
        database: cart
  h2:
    console:
      enabled: true
      path: /h2
      port : 9005
  datasource:
    url: jdbc:h2:file:./mydatabase
    username: sa
    password: ''
    driverClassName: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    # Message queue
  cloud:
    stream:
      kafka:
        binder:
        # Kafka server URL
        # 9092 is the default port of Kafka
          brokers: localhost:9092
      bindings:
        # https://docs.spring.io/spring-cloud-stream/reference/spring-cloud-stream/functional-binding-names.htm
        # Format: <method name>-<in or out>-<index>
        # sendMessage: name of the method that sends the message
        # out: because is a consumer
        # 0: Index of the binding. This makes sense when the same method sends to multiple queues
        sendPaymentOrder-out-0:
        # Name of the queue that will manage the messages
          destination: order-payment-queue
        receiveStatus-in-0:
          destination: payment-order-queue
          group: my-consumer-group
logging:
  level:
    org:
      springframework:
        jdbc:
          core:
            JdbcTemplate: DEBUG
            StatementCreatorUtils: TRACE
springdoc:
  pathsToMatch: /api/**
  swagger-ui:
    path: /api-docs
